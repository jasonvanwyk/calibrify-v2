# ============================================================================
# File Path: docker-compose.yml
# Description: Docker Compose configuration for development environment
# ============================================================================

name: calibrify-dev

services:
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: >
      bash -c "python manage.py migrate &&
               python manage.py collectstatic --no-input &&
               python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - app_settings_volume:/app/settings
      - logs_volume:/app/logs
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=calibrify.settings.development
      - DATABASE_URL=postgres://postgres:postgres@db:5432/calibrify
      - DEBUG=1
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=calibrify
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend/static:/usr/share/nginx/html/static
      - ./frontend/media:/usr/share/nginx/html/media
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/usr/share/nginx/html/media
    ports:
      - "80:80"
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    name: calibrify_postgres_data
  static_volume:
    name: calibrify_static_volume
  media_volume:
    name: calibrify_media_volume
  app_settings_volume:
    name: calibrify_settings_volume
  logs_volume:
    name: calibrify_logs_volume 