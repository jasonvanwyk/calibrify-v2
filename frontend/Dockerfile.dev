# ============================================================================
# File Path: frontend/Dockerfile.dev
# Description: Development Dockerfile for Nginx frontend
# ============================================================================

FROM nginx:1.25-alpine

# Install required packages
RUN apk add --no-cache curl shadow

# Accept UID and GID arguments
ARG UID=1000
ARG GID=1000

# Create nginx user with specified UID/GID
RUN groupmod -g ${GID} nginx || true && \
    usermod -u ${UID} -g ${GID} nginx || true

# Create necessary directories and set permissions
RUN mkdir -p /tmp/nginx && \
    mkdir -p /tmp/client_temp /tmp/proxy_temp /tmp/fastcgi_temp /tmp/uwsgi_temp /tmp/scgi_temp && \
    mkdir -p /usr/share/nginx/html/static /usr/share/nginx/html/media && \
    chown -R nginx:nginx /tmp/nginx /tmp/client_temp /tmp/proxy_temp /tmp/fastcgi_temp /tmp/uwsgi_temp /tmp/scgi_temp && \
    chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/log/nginx && \
    chmod -R 755 /tmp/nginx /tmp/client_temp /tmp/proxy_temp /tmp/fastcgi_temp /tmp/uwsgi_temp /tmp/scgi_temp && \
    chmod -R 755 /usr/share/nginx/html && \
    chmod -R 755 /var/log/nginx

# Copy nginx configuration
COPY --chown=nginx:nginx nginx.conf /etc/nginx/nginx.conf

# Switch to non-root user
USER nginx

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1 